// <auto-generated />
using System;
using HourlyRate.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HourlyRate.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20210528113110_ClientInitialize")]
    partial class ClientInitialize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HourlyRate.Data.Models.ObjectImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int?>("RealtyObjectId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RealtyObjectId");

                    b.ToTable("ObjectImage");
                });

            modelBuilder.Entity("HourlyRate.Data.Models.RealtyBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObjectId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("To")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ObjectId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("HourlyRate.Data.Models.RealtyClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ssss"
                        });
                });

            modelBuilder.Entity("HourlyRate.Data.Models.RealtyObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ObjectType")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Objects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "TEst 1",
                            ObjectType = 1,
                            Title = "sadas asdasdasd"
                        },
                        new
                        {
                            Id = 2,
                            Description = "TEst 1",
                            ObjectType = 1,
                            Title = "asdasdasdasdas"
                        },
                        new
                        {
                            Id = 3,
                            Description = "TEst 1",
                            ObjectType = 1,
                            Title = "asdasdasdasdas"
                        });
                });

            modelBuilder.Entity("HourlyRate.Data.Models.RealtyPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Day")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("EndTime")
                        .HasColumnType("time");

                    b.Property<int>("ObjectId")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Prices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 1000m,
                            ObjectId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 1000m,
                            ObjectId = 2
                        },
                        new
                        {
                            Id = 3,
                            Amount = 2000m,
                            Day = 7,
                            ObjectId = 2
                        },
                        new
                        {
                            Id = 4,
                            Amount = 1000m,
                            ObjectId = 2
                        },
                        new
                        {
                            Id = 5,
                            Amount = 2000m,
                            Day = 6,
                            ObjectId = 3
                        },
                        new
                        {
                            Id = 6,
                            Amount = 3000m,
                            Day = 7,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            ObjectId = 3,
                            StartTime = new TimeSpan(0, 12, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("HourlyRate.Data.Models.ObjectImage", b =>
                {
                    b.HasOne("HourlyRate.Data.Models.RealtyObject", null)
                        .WithMany("Images")
                        .HasForeignKey("RealtyObjectId");
                });

            modelBuilder.Entity("HourlyRate.Data.Models.RealtyBooking", b =>
                {
                    b.HasOne("HourlyRate.Data.Models.RealtyClient", "Client")
                        .WithMany("Bookings")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HourlyRate.Data.Models.RealtyObject", "Object")
                        .WithMany()
                        .HasForeignKey("ObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Object");
                });

            modelBuilder.Entity("HourlyRate.Data.Models.RealtyClient", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("HourlyRate.Data.Models.RealtyObject", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
